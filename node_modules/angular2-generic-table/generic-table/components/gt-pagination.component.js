"use strict";
var core_1 = require('@angular/core');
var directives_1 = require('@angular/core/src/metadata/directives');
var GtPaginationComponent = (function () {
    function GtPaginationComponent() {
    }
    GtPaginationComponent.prototype.ngOnInit = function () {
    };
    GtPaginationComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'gt-pagination',
                    template: "<nav aria-label=\"Table navigation\" *ngIf=\"genericTable.gtInfo\">\n  <ul class=\"pagination\" ngClass=\"{{gtClasses}}\">\n    <li class=\"page-item\" ngClass=\"{{genericTable.gtInfo.pageCurrent > 1 ? '':'disabled'}}\"><a class=\"page-link\" href=\"javascript:void(0);\" (click)=\"genericTable.gtInfo.pageCurrent > 1 && genericTable.previousPage()\" tabindex=\"-1\" [attr.aria-label]=\"genericTable.gtTexts.paginatePrevious\"><span aria-hidden=\"true\">&laquo;</span><span class=\"sr-only\">{{genericTable.gtTexts.paginatePrevious}}</span></a></li>\n    <template [ngIf]=\"genericTable.gtInfo.pageCurrent > 4\">\n      <li class=\"page-item\"><a class=\"page-link\" href=\"javascript:void(0);\" (click)=\"genericTable.goToPage(1)\">1</a></li>\n      <li class=\"page-item\" *ngIf=\"genericTable.gtInfo.pageTotal > 5\"><span class=\"page-link\">&hellip;</span></li>\n    </template>\n    <li class=\"page-item\" ngClass=\"{{genericTable.gtInfo.pageCurrent === page ? 'active':''}}\" *ngFor=\"let page of genericTable.gtInfo.pageTotal | gtPaginationPipe:genericTable.gtInfo.pageCurrent\"><a class=\"page-link\" href=\"javascript:void(0);\" (click)=\"genericTable.goToPage(page)\">{{page}}</a></li>\n    <template [ngIf]=\"genericTable.gtInfo.pageCurrent < genericTable.gtInfo.pageTotal && genericTable.gtInfo.pageTotal > 5\" >\n      <li class=\"page-item\" *ngIf=\"genericTable.gtInfo.pageCurrent + 3 < genericTable.gtInfo.pageTotal && genericTable.gtInfo.pageTotal > 6\"><span class=\"page-link\">&hellip;</span></li>\n      <li class=\"page-item\" ngClass=\"{{genericTable.gtInfo.pageCurrent === genericTable.gtInfo.pageTotal ? 'active':''}}\" ><a href=\"javascript:void(0);\" class=\"page-link\" (click)=\"genericTable.goToPage(genericTable.gtInfo.pageTotal)\">{{genericTable.gtInfo.pageTotal}}</a></li>\n    </template>\n    <li class=\"page-item\" ngClass=\"{{genericTable.gtInfo.pageCurrent !== genericTable.gtInfo.pageTotal ? '':'disabled'}}\"><a class=\"page-link gt-link\" href=\"javascript:void(0);\" (click)=\"genericTable.gtInfo.pageCurrent !== genericTable.gtInfo.pageTotal && genericTable.nextPage()\" [attr.aria-label]=\"genericTable.gtTexts.paginateNext\"><span aria-hidden=\"true\">&raquo;</span><span class=\"sr-only\">{{genericTable.gtTexts.paginateNext}}</span></a></li>\n  </ul>\n  </nav>\n    ",
                    styles: ['.gt-link {cursor: pointer;}']
                },] },
    ];
    /** @nocollapse */
    GtPaginationComponent.ctorParameters = function () { return []; };
    GtPaginationComponent.propDecorators = {
        'genericTable': [{ type: directives_1.Input },],
        'gtClasses': [{ type: directives_1.Input },],
    };
    return GtPaginationComponent;
}());
exports.GtPaginationComponent = GtPaginationComponent;
var core_2 = require('@angular/core');
var PaginationPipe = (function () {
    function PaginationPipe() {
    }
    PaginationPipe.prototype.transform = function (totalPages, currentPage) {
        var pagination;
        // if less than two pages
        if (totalPages < 2) {
            pagination = [1];
        }
        else if (totalPages < 3) {
            pagination = [1, 2];
        }
        else if (totalPages < 4) {
            pagination = [1, 2, 3];
        }
        else if (totalPages < 5) {
            pagination = [1, 2, 3, 4];
        }
        else if (currentPage <= 4) {
            pagination = [1, 2, 3, 4, 5];
        }
        else if (totalPages - 1 === currentPage) {
            pagination = [currentPage - 2, currentPage - 1, currentPage];
        }
        else if (totalPages - 3 === currentPage && totalPages > 10) {
            pagination = [currentPage - 1, currentPage, currentPage + 1, currentPage + 2];
        }
        else if (totalPages > currentPage) {
            pagination = [currentPage - 1, currentPage, currentPage + 1];
        }
        else if (totalPages === currentPage && totalPages <= 5) {
            pagination = [currentPage - 3, currentPage - 2, currentPage - 1, currentPage];
        }
        else if (totalPages === currentPage) {
            pagination = [currentPage - 2, currentPage - 1, currentPage];
        }
        else if (totalPages - 4 > currentPage) {
            pagination = [currentPage - 1, currentPage, currentPage + 1, currentPage + 2];
        }
        return pagination;
    };
    PaginationPipe.decorators = [
        { type: core_2.Pipe, args: [{
                    name: 'gtPaginationPipe'
                },] },
    ];
    /** @nocollapse */
    PaginationPipe.ctorParameters = function () { return []; };
    return PaginationPipe;
}());
exports.PaginationPipe = PaginationPipe;
//# sourceMappingURL=gt-pagination.component.js.map