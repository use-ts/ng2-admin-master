import { PipeTransform, Type } from "@angular/core";
import { GtConfigSetting } from "../interfaces/gt-config-setting";
import { GtClickFunc, GtConfigField } from "../interfaces/gt-config-field";
import { DomSanitizer } from "@angular/platform-browser";
import { GtRow } from "../interfaces/gt-row";
import { GtCustomComponent } from "../components/gt-custom-component-factory";
export interface GtRenderField<R extends GtRow, C extends GtCustomComponent<any>> {
    objectKey: string;
    renderValue?: any;
    click?: GtClickFunc<R>;
    expand?: boolean;
    sortValue: any;
    columnComponent: Type<C>;
}
export declare class GtRenderPipe<R extends GtRow> implements PipeTransform {
    private sanitizer;
    constructor(sanitizer: DomSanitizer);
    /** Sort by column order */
    private getColumnOrder;
    /** Sort by length */
    private getOrderByLength;
    /** Return property */
    private getProperty;
    private highlight(haystack, needles);
    transform(row: any, settings: Array<GtConfigSetting>, fields: Array<GtConfigField<R, any>>, updated: boolean, loading: boolean, highlight?: boolean, searchString?: string): Array<Object>;
}
